---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "torchrun-controller.fullname" . }}-manager
  namespace: {{ include "torchrun-controller.namespace" . }}
  labels:
    control-plane: controller-manager
    {{- include "torchrun-controller.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "torchrun-controller.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.controller.replicaCount }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.controller.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "torchrun-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.controller.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "torchrun-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      containers:
      - name: manager
        command:
        - /manager
        {{- with .Values.controller.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.controller.securityContext | nindent 12 }}
        livenessProbe:
          {{- toYaml .Values.controller.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.controller.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.controller.resources | nindent 12 }}
        {{- if .Values.webhook.enabled }}
        ports:
        - containerPort: {{ .Values.webhook.port }}
          name: webhook-server
          protocol: TCP
        volumeMounts:
        - mountPath: {{ .Values.webhook.certDir }}
          name: cert
          readOnly: true
        {{- end }}
      {{- if .Values.webhook.enabled }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.controller.terminationGracePeriodSeconds }} 